@page "/register"
@inject HttpClient Http
@using JhiroServer.Models;

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert @messageClass mt-4">
        @message
        @if (verificacionExitoso && messageClass == "alert-success")
        {
            <div class="mt-2">
                <a href="/login" class="btn btn-link">Iniciar Sesión</a>
            </div>
        }
    </div>
}
<h3>Registrarse</h3>

<EditForm Model="registroModel" OnValidSubmit="HandleRegistro">
    <DataAnnotationsValidator />
    <ValidationSummary />

   

    <div class="form-group">
        <label for="correo">Correo Electrónico:</label>
        <InputText id="correo" class="form-control" @bind-Value="registroModel.Correo" />
    </div>

    <button type="submit" class="btn btn-primary">Registrarse</button>
</EditForm>


@code {
    private RegistroModel registroModel = new RegistroModel();

    private string? message;
    private string messageClass = "";
    private bool registroExitoso = false;
    private bool verificacionExitoso = false; // Indica si la verificación fue exitosa

    private bool showPassword = false; // Controla la visibilidad de la contraseña
    private string passwordType => showPassword ? "text" : "password";
    private string passwordIcon => showPassword ? "bi bi-eye-slash" : "bi bi-eye";

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private async Task HandleRegistro()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7048/api/Acceso/Registrarse", registroModel);
            var result = await response.Content.ReadFromJsonAsync<Response<string>>();

            if (result.IsSuccess)
            {
                registroExitoso = true; // Indica que el registro fue exitoso
                message = result.Message;
                messageClass = "alert-success";
               
            }
            else
            {
                message = result.Message; // Muestra el mensaje de error del API
                messageClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            message = $"Ocurrió un error: {ex.Message}";
            messageClass = "alert-danger";
        }
    }

   
}
