@page "/pago"
@using Blazored.LocalStorage

@inject ILocalStorageService LocalStorage
@inject PagoService PagoService
@using JhiroServer.Models
@using JhiroServer.Services

<button@*  @onclick="RealizarPagoAsync" *@>Realizar Pago</button>

<p>@mensaje</p>
<p>Total a Pagar: @totalAPagar.ToString("C")</p>

@code {
    private string mensaje;
    private decimal totalAPagar;
    private bool isFirstRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isFirstRender = false;
            await CalcularTotalAPagar();
            StateHasChanged(); // Forzar la actualización del componente después de calcular el total
        }
    }

    private async Task CalcularTotalAPagar()
    {
        var carritos = await LocalStorage.GetItemAsync<List<CarritoDTO>>("carrito") ?? new List<CarritoDTO>();
        totalAPagar = carritos.Sum(item => item.PrecioProducto * item.Cantidad);
    }

    private async Task RealizarPagoAsync()
    {
        var carritos = await LocalStorage.GetItemAsync<List<CarritoDTO>>("carrito") ?? new List<CarritoDTO>();

        var pagoRequest = new PagoRequest
            {
                CorreoElectronico = "cliente@ejemplo.com",
                Productos = carritos.Select(item => new ProductoPagoDTO
                {
                    ProductoId = item.ProductoId,
                    NombreProducto = item.NombreProducto,
                    Cantidad = item.Cantidad,
                    Precio = item.PrecioProducto
                }).ToList()
            };

        var response = await PagoService.RealizarPago(pagoRequest);

        if (response.IsSuccess)
        {
            mensaje = "Pago realizado con éxito. ID de la orden: " + response.Data;
        }
        else
        {
            mensaje = "Error al realizar el pago: " + response.Message;
        }
    }
}
