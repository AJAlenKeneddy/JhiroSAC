@page "/admin/productos/delete/{ProductoId:int}"
@using JhiroServer.Services
@using JhiroServer.Models
@inject ProductoService ProductoService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<h1>Eliminar Producto</h1>

@if (producto == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <div class="card" style="width: 18rem;">
        <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre">
        <div class="card-body">
            <h5 class="card-title">@producto.Nombre</h5>
            <p class="card-text">@producto.Descripcion</p>
            <p class="card-text"><strong>Precio:</strong> @producto.Precio</p>
            <p class="card-text"><strong>Stock:</strong> @producto.Stock</p>
            <p class="card-text"><strong>Eliminado:</strong> @(producto.Eliminado ? "Sí" : "No")</p>
            <p class="card-text"><strong>Categoría ID:</strong> @producto.CategoriaId</p>

            <p>¿Está seguro de que desea eliminar este producto?</p>

            <button class="btn btn-danger" @onclick="ConfirmDelete">Eliminar</button>
            <a href="/admin/productos" class="btn btn-secondary">Cancelar</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public int ProductoId { get; set; }

    private Producto producto;

    protected override async Task OnInitializedAsync()
    {
        producto = await ProductoService.GetProductoByIdAsync(ProductoId);
    }

    private async Task ConfirmDelete()
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", "¿Está seguro de que desea eliminar este producto?");
        if (confirm)
        {
            await ProductoService.DeleteProductoAsync(ProductoId);
            Navigation.NavigateTo("/admin/productos");
        }
    }
}
